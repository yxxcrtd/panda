<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName" default-lazy-init="true"> 

	<!-- 扫描spring组件 -->
    <context:component-scan base-package="com.chinaedustar">
		<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect" />
	</context:component-scan>
	
	<!-- 启动@AspectJ支持 -->
	<aop:aspectj-autoproxy />
	
	<!-- 属性文件读入 -->
	<context:property-placeholder location="classpath*:properties/jdbc.properties" />
	
	<!--Hibernate TransactionManager-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!--Hibernate SessionFatory-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--  可以同时支持annotatedClasses和hbm-->
		<property name="packagesToScan">                        
			<list>                                
				<value>com.chinaedustar.app.achievement.domain</value>
			</list>                
		</property>
		<property name="entityInterceptor">
			<bean id ="queryResInterceptor" class="com.chinaedustar.common.dao.filter.QueryResInterceptor" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
			</props>
		</property>
	</bean>
	
	<!--dataSource-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 以AspectJ方式 定义 AOP -->
	<aop:config proxy-target-class="true"> 
		<aop:advisor
			pointcut="execution(public * com.chinaedustar.app.achievement.service..*ServiceImpl.*(..))"
			advice-ref="txAdvice" /> 
	</aop:config>

	<!-- 基本事务定义,使用transactionManager作事务管理,默认get*方法的事务为readonly,其余方法按默认设置.
		默认的设置请参考Spring文档事务-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="is*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="list*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="query*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="load*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="check*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="com.chinaedustar.app.achievement.common.exception.ProException"/>
		</tx:attributes>
	</tx:advice> 
</beans>
